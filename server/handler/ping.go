// Code generated by hertz generator.

package handler

import (
	"bandlab_feed_server/dal/cloudflare"
	"bandlab_feed_server/dal/mongodb"
	"context"
	"net/http"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/utils"
)

// Ping .
func Ping(ctx context.Context, c *app.RequestContext) {
	r2Service := cloudflare.GetR2Service()
	mongoService := mongodb.GetMongoService()

	// Check R2 service health
	r2Health := "ok"
	if r2Service == nil || r2Service.GetClient() == nil {
		r2Health = "unavailable"
	}

	// Check MongoDB service health
	mongoHealth := "ok"
	if mongoService == nil || mongoService.GetClient() == nil {
		mongoHealth = "unavailable"
	} else {
		err := mongoService.GetClient().Ping(ctx, nil)
		if err != nil {
			mongoHealth = "unavailable"
		}
	}

	status := http.StatusOK
	if r2Health == "unavailable" || mongoHealth == "unavailable" {
		status = http.StatusServiceUnavailable
	}

	c.JSON(status, utils.H{
		"message":      "pong",
		"r2_health":    r2Health,
		"mongo_health": mongoHealth,
	})
}
